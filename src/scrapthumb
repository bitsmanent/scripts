#!/bin/bash
# Scrap Tumblr to get random images
# Usage: feh --bg-fill --no-fehbg $(scrapthumb -run1) > /tmp/scrapthumb
# TODO: handle network errors

GETTER="wget -t1 -qO -"
MAXIMGS=5
RANDOMIZE=0
WITHSOURCE=0

# No trailing slash
DEF_SOURCES=(
	"http://tumblr.com"
	"http://desktopwallpaperproject.tumblr.com"
	"http://wallpapermag.tumblr.com"
	"https://dsgwallpaper.tumblr.com"
	"http://parallax-wallpapers.com"
	"http://aerialwallpapers.tumblr.com"
	"http://dressupyourtech.tumblr.com"
	"http://allfullhdwallpapers.tumblr.com"
)

##
# Do not edit below.
##

SOURCES=()
IMGS=()
SRCS=()

preload() {
	s=0
	n=${#SOURCES[*]}
	for i in $(seq 0 $(echo $MAXIMGS - 1|bc))
	do
		if [ $RANDOMIZE -ne 0 ]; then
			s=$(echo ${RANDOM}%$n|bc)
		else
			s=$(echo ${RANDOM}%1|bc)
		fi
		src=${SOURCES[$s]}

		SRCS[$i]="$src"
		if [ "$src" = "http://tumblr.com" ]; then
			IMGS[$i]="$($GETTER "$src" |grep -o 'id="fullscreen_post_image" src="[^ ]*"' |cut -b 32- |tr -d \")"
		else
			IMGS[$i]="$($GETTER "$src/random" |grep -o 'property="og:image" content="[^ ]*"' |cut -b 29- |tr -d \")"
		fi
	done
}

usage() {
echo -n "Usage: $0 [-hr] [-n <num>] [-s <source>] ...
-s 	Source(s) (can be specified multiple times)
-n	Number of items
-u	Also output the source (fmt: source|url)
-r	Randomize sources
-h	Show this help
"

exit 1
}

main() {
	while getopts "hn:s:ru" opt; do
		case $opt in
			h) usage;;
			n) MAXIMGS=$OPTARG;;
			s)
				i=${#SOURCES[*]}
				SOURCES[$i]=$OPTARG;;
			r) RANDOMIZE=1;;
			u) WITHSOURCE=1;;
		esac
	done

	[ ${#SOURCES[@]} -eq 0 ] && SOURCES=(${DEF_SOURCES[@]})
	preload

	for i in $(seq 0 $(echo ${#IMGS[*]} - 1|bc))
	do
		if [ $WITHSOURCE -eq 1 ]; then
			echo -n "${SRCS[$i]}|"
		fi

		echo "${IMGS[$i]}"
	done
}

main "$@"
