#!/bin/sh
# Sane Android development.

BASEDIR=~/.android-toolkit
[ -n "$DROID_BASEDIR" ] && BASEDIR="$DROID_BASEDIR"
SDKDIR="$BASEDIR/tools"
ADB="$BASEDIR/platform-tools/adb"
SDK_URL=https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
GRADLE="$BASEDIR/gradle-2.10"
GRADLE_URL="https://services.gradle.org/distributions/gradle-2.10-bin.zip"

export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"

_adb() {
	pids="$(pgrep -f ^adb)"
	if [ ${#pids} -eq 0 ]; then
		echo "WARNING: ADB server is not running, start it with: sudo droid adb start-server."
	fi
	apk="./build/outputs/apk/$(basename $(pwd))-debug.apk"
	$ADB "$@" "$apk"
}

do_setup() {
	echo "Setting up the development environment..."

	[ ! -d "$BASEDIR" ] && mkdir -p "$BASEDIR"
	if [ -d "$SDKDIR" ]; then
		echo "SDK already installed. Skipping..."
	else
		echo "Setting up the SDK..."
		f=/tmp/sdk.zip
		wget -O "$f" -qc "$SDK_URL"
		unzip -qq "$f" -d "$BASEDIR"
		echo "Cleaning up..."
		rm -f "$f"
	fi
	if [ -d "$GRADLE" ]; then
		echo "Gradle already installed. Skipping..."
	else
		echo "Setting up the Gradle build system..."
		f=/tmp/gradle.zip
		wget -O "$f" -qc "$GRADLE_URL"
		unzip -qq "$f" -d "$BASEDIR"
		echo "Cleaning up..."
		rm -f "$f"
	fi
	cd "$OLDPWD"

	echo "Installing platform tools and system image (android-28)..."
	# https://stackoverflow.com/a/47346176/508196
	#JAVA_OPTS="--add-modules java.xml.bind"
	$SDKDIR/bin/sdkmanager "platform-tools" "platforms;android-28"

	# Avoid sdklib.repository.AndroidSdkHandler class initialization error
	#export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64"
	echo "done."
}

do_install() {
	_adb install -r
}

do_uninstall() {
	# XXX Actually doesn't works (Failure)
	_adb uninstall
}

# XXX real device or emulator
do_upload() {
	# _adb push
	echo 'To be implemented.'
}

do_build() {
	rel=$1
	[ $rel ] && task="assembleRelease"  || task="assembleDebug"
	$GRADLE/bin/gradle $task
}

do_upgrade() {
	do_build
	do_install
}

do_clean() {
	rm -rf build .gradle
}

do_deploy() {
	do_build 1
	do_install
}

usage() {
	echo "Usage: $(basename "$0") <cmd>"
	echo "
Commands:
   adb\t\t: adb pass-through (run ADB commands)
   setup\t: creates the development environment
   install\t: install the app into the device
   uninstall\t: uninstall the app from the device (broken)
   upload\t: upload the app into the device
   build\t: build the app (if no task, assumes assembleDebug) 
   upgrade\t: build and install the app (assembleDebug)
   deploy\t: build and install the app (assembleRelease)
   clean\t: removes the builds from the current directory
	"
	exit 1
}

main() {
	case $1 in
		adb) shift; _adb $@;;
		setup) do_setup;;
		install) do_install;;
		uninstall) do_uninstall;;
		upload) do_upload;;
		build) do_build $2;;
		upgrade) do_upgrade;;
		deploy) do_deploy;;
		clean) do_clean;;
		*) usage;;
	esac
}

main "$@"
