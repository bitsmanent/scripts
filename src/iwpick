#!/bin/bash
# Connects to a network
# Requires: wpa_supplicant, dhclient and the iwconfig suite

NETWORKS_FILE=~/.networks
newline="
"

SCANRETRIES=3
SCANWAITSEC=3

ARGV0="$(basename "$0")"

connect() {
	iface=$1
	essid=$2
	key=$3
	addr="$4"
	gw="$5"

	iwconfig $iface essid "$essid"
	if [ -n "$key" ]; then
		tmp=$(mktemp)
		echo -n "$key" | wpa_passphrase "$essid" >> $tmp 2>/dev/null
		wpa_supplicant -i $iface -c "$tmp" -B 2>&1 > /dev/null
		rm $tmp
	fi

	# if no addr then use dhcp
	if [ -z "$addr" ]; then
		dhclient $iface >/dev/null &
		while [ -z "$gw" ]; do
			pkt="$(tcpdump -vlni $iface -c 1 -Q in udp 2>&1)"
			addr="$(echo "$pkt" |grep "Your-IP" |tr -d [:space:] |cut -b8-)"
			dgw="$(echo "$pkt" |grep "Gateway-IP" |tr -d [:space:] |cut -b11-)"
			egw="$(echo "$pkt" |grep "Default-Gateway" |tr -d [:space:] |cut -d: -f2)"
			[ -n "$dgw" ] && gw="$dgw" || gw="$egw"
		done
	fi
	[ -n "$addr" ] && ifconfig $iface $addr 2>/dev/null
	[ -n "$gw" ] && route add default gw $gw 2>/dev/null
}

die() {
	echo "$ARGV0: $@"
	exit 1
}

emsg() {
	echo "$@" > /dev/stderr
}

pickone() {
	iface="$1"
	file="$2"
	retry="$3"
	#ids=$(iwlist "$iface" scan |grep ESSID |cut -d'"' -f2)
	scanned="$(iwlist "$iface" scan 2> /dev/null)"
	rv=$?

	if [ $rv -ne 0 ]; then
		[ -z "$retry" ] && retry=1
		emsg "Device busy. Retry in $SCANWAITSEC seconds ($retry/$SCANRETRIES)..."
		[ $retry -eq $SCANRETRIES ] && exit 1
		sleep "$SCANWAITSEC"
		retry="$(echo "$retry + 1" | bc)"
		pickone "$iface" "$file" "$retry"
		exit $?
	fi

	ids="$(echo "$scanned" |grep ESSID | cut -d'"' -f2)"
	nets="$(cat "$file")"

	oifs="$IFS"
	IFS="$newline"
	for net in $nets; do
		essid="$(echo "$net" |cut -d: -f2)"
		for id in $ids; do
			if [ "$id" = "$essid" ]; then
				echo "$net"
				return
			fi
		done
	done
	IFS="$oifs"
}

usage() {
echo -n "Usage: $ARGV0 [-hg] [-i <iface>] [-e <essid>] [-k <psk>] [-a <alias>]
-i <iface>	Network interface
-a <alias>	Use the specified alias to connect
-e <essid>	ESSID of the network to connect
-k <key>	Key of the network to connect
-f <file>	Networks file
-p 		Connect to a known network
-h		Show this help
"
exit 1
}

main() {
	iface="$(ifconfig -a -s |grep ^wl |head -1 |cut -d ' ' -f1)"
	file="$NETWORKS_FILE"
	alias=
	essid=
	key=
	pick=0

	while getopts "inpa:e:k:f:h" o; do
		case $o in
			i) iface=$OPTARG;;
			a) alias=$OPTARG;;
			e) essid=$OPTARG;;
			k) key=$OPTARG;;
			f) file=$OPTARG;;
			p) pick=1;;
			h) usage;;
		esac
	done

	uid="$(id -u)"
	if [ "$uid" -ne 0 ]; then
		[ ! -u "$0" ] && die "You must be root."
		sudo HOME="$HOME" $0 $@
		exit $?
	fi

	if [ -n "$alias" ]; then
		net="$(sed -n "/^${alias}:/p" "$file")"
		[ -z "$net" ] && die "alias '${alias}' not found"
	elif [ $pick -eq 1 ]; then
		echo "Looking for a suitable network... "
		net="$(pickone "$iface" "$file")"
		[ -z "$net" ] && die "no network found."
	else
		usage
	fi

	essid="$(echo $net |cut -d: -f2)"
	key="$(echo $net |cut -sd: -f3)"
	addr="$(echo $net |cut -sd: -f4)"
	gw="$(echo $net |cut -sd: -f5)"

	echo "Connecting to ${essid}..."

	# If explicitly specified, check if the ESSID do exists
	valid="$(iwlist $iface scan |grep ESSID |grep -wc "$essid")"
	[ $valid -eq 0 ] && die "$essid: no network found"
	ifconfig $iface up 0.0.0.0
	apps=(wpa_supplicant dhclient)
	for a in ${apps[@]}
	do
		pkill -f "$a"
	done
	connect "$iface" "$essid" "$key" "$addr" "$gw"
	echo "Connected."
}

main "$@"
