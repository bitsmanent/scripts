#!/bin/bash
# Connects to a network
# Requires: wpa_supplicant, sdhcp, iwconfig

NS1=208.67.222.222
NS2=208.67.220.220

connect() {
	iface=$1
	essid=$2
	key=$3

	echo "Connecting to ${essid}..."

	ifconfig $iface up 0
	iwconfig $iface essid $essid

	if [ -n "$key" ]; then
		tmp=$(mktemp)
		echo -n "$key" | wpa_passphrase "$essid" >> $tmp
		wpa_supplicant -i $iface -c "$tmp" -B 2>&1 > /dev/null
		rm $tmp
	fi

	sdhcp -d $iface >/dev/null &
	pkt="$(tcpdump -vlni $iface -c 1 -Q in udp 2>&1)"
	addr="$(echo "$pkt" |grep "Your-IP" |tr -d [:space:] |cut -b8-)"
	dgw="$(echo "$pkt" |grep "Gateway-IP" |tr -d [:space:] |cut -b11-)"
	egw="$(echo "$pkt" |grep "Default-Gateway" |tr -d [:space:] |cut -d: -f2)"
	[ -n "$dgw" ] && gw="$dgw" || gw="$egw"
	ifconfig $iface $addr
	route add default gw $gw
}

die() {
	echo "$0: $@"
	exit 1
}

usage() {
echo -n "Usage: $0 [-hg] [-i <iface>] [-e <essid>] [-k <psk>] [-a <alias>]
-i <iface>	Network interface
-a <alias>	Use the specified alias to connect
-e <essid>	ESSID of the network to connect
-k <key>	Key of the network to connect
-f <file>	Networks file
-h		Show this help
"
exit 1
}

main() {
	iface=wlan0
	file=~/.networks
	alias=
	essid=
	key=

	while getopts "ina:e:k:f:h" o; do
		case $o in
			i) iface=$OPTARG;;
			a) alias=$OPTARG;;
			e) essid=$OPTARG;;
			k) key=$OPTARG;;
			f) file=$OPTARG;;
			h) usage;;
		esac
	done

	[ "$(id -u)" -ne 0 ] && die "You must be root"
	[ -z "$alias" -a -z "$essid" ] && usage

	if [ -n "$alias" ]; then
		s="$(sed -n /^${alias}:/p $file |cut -d: -f2-3)"
		essid="$(echo $s |cut -d: -f1)"
		key="$(echo $s |cut -sd: -f2)"
	else
		# If explicitly specified, check if the ESSID do exists
		valid="$(iwlist $iface scan |grep ESSID |grep -wc $essid)"
		[ $valid -eq 0 ] && die "essid '$essid' is not valid"
	fi

	[ -z "$essid" ] && die "alias '${alias}' not found"

	apps=(wpa_supplicant sdhcp)
	for a in ${apps[@]}
	do
		pkill -f "$a"
	done

	connect "$iface" "$essid" "$key"

	# If no DNS are set, then use our own
	f=/etc/resolv.conf
	t=$(grep ^[^#] $f |wc -l)
	[ $t -eq 0 ] && printf "nameserver %s\nnameserver %s\n" $NS1 $NS2 >> $f
}

main "$@"
